package ui.BuildingTeam;

import business.Business;
import business.Enterprise.BuildingTeamEnterprise;
import business.UserAccount.UserAccount;
import business.WorkQueue.ServiceWorkRequest;
import business.WorkQueue.WorkRequest;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

public class ResidentWorkArea extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount account;
    Business business;
    BuildingTeamEnterprise par;
    Boolean access = false;
    private JPanel bookAmenitiesPanel; // Declare at the class level

    public ResidentWorkArea(JPanel userProcessContainer, UserAccount account, BuildingTeamEnterprise par, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.par = par;
        this.business = business;
        // Initialize BookAmenitiesPanel and add to the layout
        bookAmenitiesPanel = new BookAmenitiesPanel();
        add(bookAmenitiesPanel, "cardBookAmenities");

        populate();
        populateLease();
        populateServiceRequestComboBox();
        populateDeli();
        
        populateTable();

        access = account.isValidate();
        if (!access) {
            btnRaiseARequest.setEnabled(false);
            btnCheckPackage.setEnabled(false);
        }
        if (access) {
            btnSubmitLease.setEnabled(false);
            btnSubmitLease.setText("Lease Approved");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        WorkArea = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnRaiseARequest = new javax.swing.JButton();
        btnSubmitLease = new javax.swing.JButton();
        btnCheckPackage = new javax.swing.JButton();
        btnBookAmenities = new javax.swing.JToggleButton();
        ServiceRequest = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Service = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        message = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBoxServiceRequest = new javax.swing.JComboBox<>();
        applease = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Service1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        btnSubmit1 = new javax.swing.JButton();
        checkpackage = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPackage = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setLayout(new java.awt.CardLayout());

        WorkArea.setBackground(new java.awt.Color(255, 255, 214));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Residents Work Area");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnRaiseARequest.setBackground(new java.awt.Color(255, 0, 102));
        btnRaiseARequest.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        btnRaiseARequest.setText("Raise Service Request");
        btnRaiseARequest.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRaiseARequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaiseARequestActionPerformed(evt);
            }
        });

        btnSubmitLease.setBackground(new java.awt.Color(153, 255, 153));
        btnSubmitLease.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        btnSubmitLease.setText("Submit Lease Docs");
        btnSubmitLease.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSubmitLease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitLeaseActionPerformed(evt);
            }
        });

        btnCheckPackage.setBackground(new java.awt.Color(204, 0, 255));
        btnCheckPackage.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        btnCheckPackage.setText("Check Packages");
        btnCheckPackage.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCheckPackage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckPackageActionPerformed(evt);
            }
        });

        btnBookAmenities.setBackground(new java.awt.Color(153, 153, 255));
        btnBookAmenities.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        btnBookAmenities.setText("Book Amenities");
        btnBookAmenities.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBookAmenities.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookAmenitiesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout WorkAreaLayout = new javax.swing.GroupLayout(WorkArea);
        WorkArea.setLayout(WorkAreaLayout);
        WorkAreaLayout.setHorizontalGroup(
            WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WorkAreaLayout.createSequentialGroup()
                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WorkAreaLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(WorkAreaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnSubmitLease, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(WorkAreaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnCheckPackage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(WorkAreaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBookAmenities, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(WorkAreaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnRaiseARequest, javax.swing.GroupLayout.DEFAULT_SIZE, 1183, Short.MAX_VALUE)))
                .addContainerGap())
        );
        WorkAreaLayout.setVerticalGroup(
            WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WorkAreaLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(btnRaiseARequest, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnSubmitLease, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnCheckPackage, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnBookAmenities, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(229, Short.MAX_VALUE))
        );

        add(WorkArea, "card2");

        ServiceRequest.setBackground(new java.awt.Color(255, 255, 204));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Residents Raise Service Request");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Service.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Type", "Message", "Status", "Feedback"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Service);
        if (Service.getColumnModel().getColumnCount() > 0) {
            Service.getColumnModel().getColumn(0).setResizable(false);
            Service.getColumnModel().getColumn(1).setHeaderValue("Message");
            Service.getColumnModel().getColumn(2).setResizable(false);
            Service.getColumnModel().getColumn(3).setResizable(false);
            Service.getColumnModel().getColumn(3).setHeaderValue("Feedback");
        }

        jLabel1.setText("MESSAGE :");

        jLabel4.setText("TYPE :");

        btnSubmit.setText("SUBMIT");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jButton1.setText("BACK");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBoxServiceRequest.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout ServiceRequestLayout = new javax.swing.GroupLayout(ServiceRequest);
        ServiceRequest.setLayout(ServiceRequestLayout);
        ServiceRequestLayout.setHorizontalGroup(
            ServiceRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ServiceRequestLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(ServiceRequestLayout.createSequentialGroup()
                .addGroup(ServiceRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ServiceRequestLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ServiceRequestLayout.createSequentialGroup()
                        .addGap(429, 429, 429)
                        .addGroup(ServiceRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ServiceRequestLayout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ServiceRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(ServiceRequestLayout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(ServiceRequestLayout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBoxServiceRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(400, Short.MAX_VALUE))
        );
        ServiceRequestLayout.setVerticalGroup(
            ServiceRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ServiceRequestLayout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(ServiceRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(ServiceRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxServiceRequest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ServiceRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(305, Short.MAX_VALUE))
        );

        add(ServiceRequest, "card3");

        applease.setBackground(new java.awt.Color(255, 255, 204));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Submit Lease Docs");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Service1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Type", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Service1);
        if (Service1.getColumnModel().getColumnCount() > 0) {
            Service1.getColumnModel().getColumn(0).setResizable(false);
            Service1.getColumnModel().getColumn(1).setResizable(false);
            Service1.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton2.setText("BACK");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnSubmit1.setText("SUBMIT");
        btnSubmit1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSubmit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmit1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout appleaseLayout = new javax.swing.GroupLayout(applease);
        applease.setLayout(appleaseLayout);
        appleaseLayout.setHorizontalGroup(
            appleaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appleaseLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jButton2)
                .addGap(151, 151, 151)
                .addGroup(appleaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(appleaseLayout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(btnSubmit1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(383, Short.MAX_VALUE))
            .addGroup(appleaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        appleaseLayout.setVerticalGroup(
            appleaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appleaseLayout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addGroup(appleaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(76, 76, 76)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(309, Short.MAX_VALUE))
            .addGroup(appleaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(appleaseLayout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(633, Short.MAX_VALUE)))
        );

        add(applease, "card4");

        checkpackage.setBackground(new java.awt.Color(204, 204, 255));

        jLabel6.setText("Check For Resident Packages");

        tblPackage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Package Details", "Sender", "Type", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblPackage);
        if (tblPackage.getColumnModel().getColumnCount() > 0) {
            tblPackage.getColumnModel().getColumn(0).setResizable(false);
            tblPackage.getColumnModel().getColumn(1).setResizable(false);
            tblPackage.getColumnModel().getColumn(2).setResizable(false);
            tblPackage.getColumnModel().getColumn(3).setResizable(false);
        }

        jButton3.setText("BACK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout checkpackageLayout = new javax.swing.GroupLayout(checkpackage);
        checkpackage.setLayout(checkpackageLayout);
        checkpackageLayout.setHorizontalGroup(
            checkpackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, checkpackageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(354, 354, 354))
            .addGroup(checkpackageLayout.createSequentialGroup()
                .addGap(209, 209, 209)
                .addGroup(checkpackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(202, Short.MAX_VALUE))
        );
        checkpackageLayout.setVerticalGroup(
            checkpackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkpackageLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(259, Short.MAX_VALUE))
        );

        add(checkpackage, "card5");
    }// </editor-fold>//GEN-END:initComponents
    public void populate() {
        DefaultTableModel model = (DefaultTableModel) Service.getModel();
        model.setRowCount(0);
        int i = 0;
        for (WorkRequest work : account.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[4];
            row[0] = i;
            row[0] = work.getType();
            row[1] = work.getMessage();
            row[2] = work.getStatus();
            i++;

            model.addRow(row);

        }

    }

    public void populateDeli() {
        DefaultTableModel model = (DefaultTableModel) tblPackage.getModel();
        model.setRowCount(0); // Clear the table before populating

        String residentAptUnit = String.valueOf(account.getId()); // Resident's apt unit (ID)

        // Iterate through the work requests in the resident's work queue and filter delivery-related requests
        for (WorkRequest workRequest : account.getWorkQueue().getWorkRequestList()) {
            if (workRequest instanceof ServiceWorkRequest && residentAptUnit.equals(workRequest.getMessage())) {
                Object[] row = {
                    workRequest.getMessage(), // Apt unit/Message
                    workRequest.getSender().getUsername(), // Sender (e.g., delivery agent)
                    workRequest.getType(), // Type of request (e.g., Delivery)
                    workRequest.getStatus() // Current status (e.g., Delivered, Returned)
                };
                model.addRow(row);
            }
        }
    }
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:

        ServiceWorkRequest request = new ServiceWorkRequest();

        // Get the selected service request type from the combo box
        String selectedServiceRequest = (String) jComboBoxServiceRequest.getSelectedItem();

        // Validate the selection
        if (selectedServiceRequest == null || selectedServiceRequest.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select a service request type.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Set request properties
        request.setType(selectedServiceRequest);
        request.setMessage(message.getText());
        request.setStatus("Sent");
        request.setSender(account);

        // Add request to the queues
        if (par != null) {
            par.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);

            // Success message
            JOptionPane.showMessageDialog(null, "Service Request Added!");

            // Reset fields
            populate(); // Refresh the data (e.g., table or UI elements)
            jComboBoxServiceRequest.setSelectedIndex(0); // Reset combo box to default
            message.setText(""); // Clear the message field
        } else {
            JOptionPane.showMessageDialog(null, "No Enterprise", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnRaiseARequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaiseARequestActionPerformed
        // TODO add your handling code here:
        applease.setVisible(false);
        ServiceRequest.setVisible(true);
        WorkArea.setVisible(false);
        checkpackage.setVisible(false);
    }//GEN-LAST:event_btnRaiseARequestActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ServiceRequest.setVisible(false);
        checkpackage.setVisible(false);
        checkpackage.setVisible(false);
        WorkArea.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSubmitLeaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitLeaseActionPerformed
        applease.setVisible(true);
        ServiceRequest.setVisible(false);
        checkpackage.setVisible(false);
        WorkArea.setVisible(false);
    }//GEN-LAST:event_btnSubmitLeaseActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        applease.setVisible(false);
        WorkArea.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnSubmit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmit1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) Service1.getModel();
        if ((model.getRowCount() < 1) || (model.getValueAt(0, 2) != null && model.getValueAt(0, 2).equals("submit again") && (model.getRowCount() <= 1))) {
            ServiceWorkRequest request = new ServiceWorkRequest();

            request.setType("lease");
            // request.setMessage(message.getText());
            request.setStatus("sent");
            request.setSender(account);

            if (par != null) {
                par.getWorkQueue().getWorkRequestList().add(request);
                account.getWorkQueue().getWorkRequestList().add(request);
                JOptionPane.showMessageDialog(null, "Lease Request Added!");
                populateLease();
            } else {
                JOptionPane.showMessageDialog(null, "No Enterprise");
            }
        } else if (model.getValueAt(0, 2).equals("sent") || (model.getValueAt(1, 2) != null && model.getValueAt(1, 2).equals("sent"))) {
            JOptionPane.showMessageDialog(null, "Your documents are in process with Lease Team");
        } else if (model.getValueAt(0, 2).equals("approved") || (model.getValueAt(1, 2) != null && model.getValueAt(1, 2).equals("approved"))) {
            JOptionPane.showMessageDialog(null, "Your documents are Approved by the Lease Team");
        }


    }//GEN-LAST:event_btnSubmit1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        applease.setVisible(false);
        ServiceRequest.setVisible(false);
        checkpackage.setVisible(false);
        WorkArea.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnBookAmenitiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookAmenitiesActionPerformed
        // TODO add your handling code here:
        // Hide other panels and show BookAmenitiesPanel
        WorkArea.setVisible(false);
        ServiceRequest.setVisible(false);
        applease.setVisible(false);
        checkpackage.setVisible(false);
        bookAmenitiesPanel.setVisible(true);

    }//GEN-LAST:event_btnBookAmenitiesActionPerformed

    private void btnCheckPackageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckPackageActionPerformed
        // TODO add your handling code here:

        applease.setVisible(false);
        ServiceRequest.setVisible(false);
        checkpackage.setVisible(true);
        WorkArea.setVisible(false);
        populateDeli();
    }//GEN-LAST:event_btnCheckPackageActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Service;
    private javax.swing.JTable Service1;
    private javax.swing.JPanel ServiceRequest;
    private javax.swing.JPanel WorkArea;
    private javax.swing.JPanel applease;
    private javax.swing.JToggleButton btnBookAmenities;
    private javax.swing.JButton btnCheckPackage;
    private javax.swing.JButton btnRaiseARequest;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnSubmit1;
    private javax.swing.JButton btnSubmitLease;
    private javax.swing.JPanel checkpackage;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBoxServiceRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField message;
    private javax.swing.JTable tblPackage;
    // End of variables declaration//GEN-END:variables

    private void populateServiceRequestComboBox() {
        jComboBoxServiceRequest.removeAllItems();

        // Add service request options
        String[] serviceRequests = {"Plumbing", "Electrical", "Cleaning", "Pest Control", "General Maintenance"};
        for (String request : serviceRequests) {
            jComboBoxServiceRequest.addItem(request);
        }
    }

    public void populateLease() {
        DefaultTableModel model = (DefaultTableModel) Service1.getModel();
        model.setRowCount(0);
        int i = 1;
        for (WorkRequest work : account.getWorkQueue().getWorkRequestList()) {
            if (work.getType().equals("lease")) {
                Object[] row = new Object[4];
                row[0] = i;
                row[1] = work.getType();
                //   row[1]=work.getMessage();
                row[2] = work.getStatus();
                i++;

                model.addRow(row);
            }
        }

    }

    public void populateTable() {
        // Assuming tblPackage is already initialized
        DefaultTableModel model = (DefaultTableModel) tblPackage.getModel();

        // Clear existing rows
        model.setRowCount(0);

        // Adding rows of real-life data
        // Row 1
        Object[] row1 = new Object[4];
        row1[0] = "Laptop - HP Pavilion 15";
        row1[1] = "Alice Green, 123 Elm St, Springfield, IL";
        row1[2] = "Express";
        row1[3] = "Shipped";

        // Row 2
        Object[] row2 = new Object[4];
        row2[0] = "Smartphone - Samsung Galaxy S23";
        row2[1] = "Bob White, 456 Oak Ave, Denver, CO";
        row2[2] = "Standard";
        row2[3] = "In Transit";

        // Add the rows to the model
        model.addRow(row1);
        model.addRow(row2);

    }
}
